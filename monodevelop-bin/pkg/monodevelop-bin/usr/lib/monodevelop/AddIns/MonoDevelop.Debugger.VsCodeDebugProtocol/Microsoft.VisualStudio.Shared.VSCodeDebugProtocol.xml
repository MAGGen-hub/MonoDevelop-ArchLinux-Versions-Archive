<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.VisualStudio.Shared.VSCodeDebugProtocol</name>
    </assembly>
    <members>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase">
            <summary>
            Base class for implementing a debug adapter that uses the Visual Studio Code Debug Protocol.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.Protocol">
            <summary>
            Provides access to the underlying protocol implementation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.InitializeProtocolClient(System.IO.Stream,System.IO.Stream)">
            <summary>
            Initializes the underlying protocol implementation.
            </summary>
            <param name="debugAdapterStdIn">Stream from which requests should be read.</param>
            <param name="debugAdapterStdOut">Stream to which resposes and events should be written.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleProtocolError(System.Exception)">
            <summary>
            Notification method invoked when the underlying protocol implementation encounters an unhandleable error.
            </summary>
            <param name="ex">The exception thrown by the underlying protocol implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleProtocolRequest(System.String,System.Object)">
            <summary>
            Invoked when a message of type 'request' is received.  Derived implementations can override this method to customize handling of all requests.
            </summary>
            <param name="requestType">Protocol type of the request.</param>
            <param name="requestArgs">Arguments for the request.</param>
            <returns>The response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleAttachRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachArguments)">
            <summary>
            Invoked when a request of type 'AttachRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleCompletionsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments)">
            <summary>
            Invoked when a request of type 'CompletionsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleConfigurationDoneRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneArguments)">
            <summary>
            Invoked when a request of type 'ConfigurationDoneRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleContinueRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueArguments)">
            <summary>
            Invoked when a request of type 'ContinueRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleDisconnectRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectArguments)">
            <summary>
            Invoked when a request of type 'DisconnectRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleEvaluateRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments)">
            <summary>
            Invoked when a request of type 'EvaluateRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleExceptionInfoRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoArguments)">
            <summary>
            Invoked when a request of type 'ExceptionInfoRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleGotoRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoArguments)">
            <summary>
            Invoked when a request of type 'GotoRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleGotoTargetsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsArguments)">
            <summary>
            Invoked when a request of type 'GotoTargetsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleInitializeRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments)">
            <summary>
            Invoked when a request of type 'InitializeRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleLaunchRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchArguments)">
            <summary>
            Invoked when a request of type 'LaunchRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleModulesRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesArguments)">
            <summary>
            Invoked when a request of type 'ModulesRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleNextRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextArguments)">
            <summary>
            Invoked when a request of type 'NextRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandlePauseRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseArguments)">
            <summary>
            Invoked when a request of type 'PauseRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleRestartFrameRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameArguments)">
            <summary>
            Invoked when a request of type 'RestartFrameRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleRestartRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartArguments)">
            <summary>
            Invoked when a request of type 'RestartRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleReverseContinueRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueArguments)">
            <summary>
            Invoked when a request of type 'ReverseContinueRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleScopesRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesArguments)">
            <summary>
            Invoked when a request of type 'ScopesRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetBreakpointsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments)">
            <summary>
            Invoked when a request of type 'SetBreakpointsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetDebuggerPropertyRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyArguments)">
            <summary>
            Invoked when a request of type 'SetDebuggerPropertyRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetExceptionBreakpointsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsArguments)">
            <summary>
            Invoked when a request of type 'SetExceptionBreakpointsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetExpressionRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments)">
            <summary>
            Invoked when a request of type 'SetExpressionRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetFunctionBreakpointsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsArguments)">
            <summary>
            Invoked when a request of type 'SetFunctionBreakpointsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSetVariableRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments)">
            <summary>
            Invoked when a request of type 'SetVariableRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleSourceRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceArguments)">
            <summary>
            Invoked when a request of type 'SourceRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleStackTraceRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments)">
            <summary>
            Invoked when a request of type 'StackTraceRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleStepBackRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackArguments)">
            <summary>
            Invoked when a request of type 'StepBackRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleStepInRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInArguments)">
            <summary>
            Invoked when a request of type 'StepInRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleStepInTargetsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsArguments)">
            <summary>
            Invoked when a request of type 'StepInTargetsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleStepOutRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutArguments)">
            <summary>
            Invoked when a request of type 'StepOutRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleThreadsRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsArguments)">
            <summary>
            Invoked when a request of type 'ThreadsRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterBase.HandleVariablesRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments)">
            <summary>
            Invoked when a request of type 'VariablesRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase">
            <summary>
            Base class for implementing a host for debug adapters that use the Visual Studio Code Debug Protocol.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.Protocol">
            <summary>
            Provides access to the underlying protocol implementation.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.InitializeProtocolHost(System.IO.Stream,System.IO.Stream)">
            <summary>
            Initializes the underlying protocol implementation.
            </summary>
            <param name="debugAdapterStdIn">Stream to which requests should be written.</param>
            <param name="debugAdapterStdOut">Stream from which responses and events should be read.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleProtocolError(System.Exception)">
            <summary>
            Notification method invoked when the underlying protocol implementation encounters an unhandleable error.
            </summary>
            <param name="ex">The exception thrown by the underlying protocol implementation.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleProtocolEvent(System.String,System.Object)">
            <summary>
            Invoked when a message of type 'event' is received.  Derived implementations can override this method to customize handling of all events.
            </summary>
            <param name="eventType">Protocol type of the event</param>
            <param name="eventBody">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleBreakpointEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent)">
            <summary>
            Invoked when an event of type 'BreakpointEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleContinuedEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent)">
            <summary>
            Invoked when an event of type 'ContinuedEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleExitedEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent)">
            <summary>
            Invoked when an event of type 'ExitedEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleInitializedEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializedEvent)">
            <summary>
            Invoked when an event of type 'InitializedEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleModuleEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent)">
            <summary>
            Invoked when an event of type 'ModuleEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleOutputEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent)">
            <summary>
            Invoked when an event of type 'OutputEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleProcessEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent)">
            <summary>
            Invoked when an event of type 'ProcessEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleScriptEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent)">
            <summary>
            Invoked when an event of type 'ScriptEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleStoppedEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent)">
            <summary>
            Invoked when an event of type 'StoppedEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleTerminatedEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent)">
            <summary>
            Invoked when an event of type 'TerminatedEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleThreadEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent)">
            <summary>
            Invoked when an event of type 'ThreadEvent' is received.  Derived implementations should override this method to provide handling for this type of event.
            </summary>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleProtocolRequest(System.String,System.Object)">
            <summary>
            Invoked when a message of type 'request' is received.  Derived implementations can override this method to customize handling of all requests.
            </summary>
            <param name="requestType">Protocol type of the request.</param>
            <param name="requestArgs">Arguments for the request.</param>
            <returns>The response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleHandshakeRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeArguments)">
            <summary>
            Invoked when a request of type 'HandshakeRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugAdapterHostBase.HandleRunInTerminalRequest(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments)">
            <summary>
            Invoked when a request of type 'RunInTerminalRequest' is received.  Derived implementations should override this method to provide handling for this type of request.
            </summary>
            <param name="arguments">Arguments for the request.</param>
            <returns>Response to the request.</returns>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.LogMessage"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogEventArgs.Category">
            <summary>
            Log message category.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogEventArgs.Message">
            <summary>
            Log message text.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogCategory">
            <summary>
            Category information associated with a log message.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogCategory.Trace">
            <summary>
            Message contains protocol trace data.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.LogCategory.Warning">
            <summary>
            Message contains warning data.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol">
            <summary>
            Base implementation of the Visual Studio Code Debug Protocol.  Provides methods for sending and receiving requests, responses, and events.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol"/> class.
            </summary>
            <param name="readStream">Stream from which incoming protocol messages should be read.</param>
            <param name="writeStream">Stream to which outgoing protocol messages should be written.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.Run">
            <summary>
            Starts the protocol dispatcher thread.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.Stop">
            <summary>
            Stops the protocol dispatcher thread and cancels any outstanding synchronous operations.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.WaitForReader">
            <summary>
            Waits for the dispatcher thread to finish.
            The debug adapter should already be closed or else this will not return.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.VerifySynchronousOperationAllowed">
            <summary>
            Verifies that a synchronous operation is allowed on the current thread.  If the operation is not allowed,
            an InvalidOperationException will be thrown.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.DispatcherError">
            <summary>
            Raised when an unhandled exception occurs on the protocol dispatcher thread.  After raising this event,
            the dispatcher thread will shut down.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.RequestReceived">
            <summary>
            Raised when a protocol request is received.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.SynchronousOperationBegin">
            <summary>
            Raised when a synchronous operation begins.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.SynchronousOperationEnd">
            <summary>
            Raised when a synchronous operation completes or is cancelled.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.SynchronousOperationUpdate">
            <summary>
            Raised periodically during processing of a synchronous operation.
            </summary>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.LogMessage">
            <summary>
            Raised when a log message is generated.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.IsRunning">
            <summary>
            Indicates that the protocol implementation is connected to a debug adapter and is able to process messages.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.OnEventReceived(System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugEvent)">
            <summary>
            Invoked when a message of type 'event' is received.  Derived implementations that want to receive events should override this method.
            </summary>
            <param name="eventType">Protocol type of the event.</param>
            <param name="body">Body of the event.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient">
            <summary>
            Protocol implementation specialized for use in a debug adapter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient" /> class.
            </summary>
            <param name="stdIn">Stream from which the debug adapter should read requests.</param>
            <param name="stdOut">Stream to which the debug adapter should write responses and events.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.SendEvent(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugEvent)">
            <summary>
            Sends an event to the host.
            </summary>
            <param name="evt">The event to send.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.SendClientRequest``2(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequestWithResponse{``0,``1},System.Action{``0,``1},System.Action{``0,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException})">
            <summary>
            Sends a client request to the host asynchronously.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the client request.</typeparam>
            <param name="request">The client request to send.</param>
            <param name="completionFunc">The method to invoke when the client request completes successfully.</param>
            <param name="errorFunc">The method to invoke when the client request fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.SendClientRequestSync``2(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequestWithResponse{``0,``1})">
            <summary>
            Sends a client request to the host and waits for a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the client request.</typeparam>
            <param name="request">The client request to send.</param>
            <returns>The response to the client request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.SendClientRequest``1(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequest{``0},System.Action{``0},System.Action{``0,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException})">
            <summary>
            Sends a client request to the host asynchronously.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
            <param name="request">The client request to send.</param>
            <param name="completionFunc">The method to invoke when the client request completes successfully.</param>
            <param name="errorFunc">The method to invoke when the client request fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolClient.SendClientRequestSync``1(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequest{``0})">
            <summary>
            Sends a client request to the host and waits for it to complete.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
            <param name="request">The client request to send.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost">
            <summary>
            Protocol implementation specialized for hosting a debug adapter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.#ctor(System.IO.Stream,System.IO.Stream)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost"/> class.
            </summary>
            <param name="debugAdapterStdIn">The hosted debug adapter's stdin.  Requests will be written to this stream.</param>
            <param name="debugAdapterStdOut">The hosted debug adapter's stdout.  Responses and events will be read from this stream.</param>
        </member>
        <member name="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.EventReceived">
            <summary>
            Invoked when a message of type 'event' is received from the hosted debug adapter.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.OnEventReceived(System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugEvent)">
            <summary>
            Invoked when a message of type 'event' is received.
            </summary>
            <param name="eventType">Protocol type of the event.</param>
            <param name="body">Body of the event.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.SendRequest``2(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequestWithResponse{``0,``1},System.Action{``0,``1},System.Action{``0,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException})">
            <summary>
            Sends a request to the debug adapter asynchronously.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the request.</typeparam>
            <param name="request">The request to send.</param>
            <param name="completionFunc">The method to invoke when the request completes successfully.</param>
            <param name="errorFunc">The method to invoke when the request fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.SendRequestSync``2(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequestWithResponse{``0,``1})">
            <summary>
            Sends a request to the debug adapter and waits for a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the request.</typeparam>
            <param name="request">The request to send.</param>
            <returns>The response to the request.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.SendRequest``1(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequest{``0},System.Action{``0},System.Action{``0,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException})">
            <summary>
            Sends a request to the debug adapter asynchronously.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
            <param name="request">The request to send.</param>
            <param name="completionFunc">The method to invoke when the request completes successfully.</param>
            <param name="errorFunc">The method to invoke when the request fails.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.SendRequestSync``1(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequest{``0})">
            <summary>
            Sends a request to the debug adapter and waits it to complete.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
            <param name="request">The request to send.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.EventReceivedEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DebugProtocolHost.EventReceived"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.EventReceivedEventArgs.EventType">
            <summary>
            The protocol type of the event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.EventReceivedEventArgs.Body">
            <summary>
            The body of the event.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugEvent">
            <summary>
            Base class for protocol event bodies.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent">
            <summary>
            Event message for 'breakpoint' event type.
            The event indicates that some information about a breakpoint has changed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.Reason">
            <summary>
            The reason for the event (such as: 'changed', 'new').
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.Breakpoint">
            <summary>
            The breakpoint.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent.ReasonValue,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.BreakpointEvent"/> class.
            </summary>
            <param name="reason">The reason for the event (such as: 'changed', 'new').</param>
            <param name="breakpoint">The breakpoint.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent">
            <summary>
            Event message for 'continued' event type.
            The event indicates that the execution of the debuggee has continued.
            Please note: a debug adapter is not expected to send this event in response to a request that implies that execution continues, e.g. 'launch' or 'continue'.
            It is only necessary to send a ContinuedEvent if there was no previous request that implied this.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent.ThreadId">
            <summary>
            The thread which was continued.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent.AllThreadsContinued">
            <summary>
            If allThreadsContinued is true, a debug adapter can announce that all threads have continued.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent.#ctor(System.Int32,System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinuedEvent"/> class.
            </summary>
            <param name="threadId">The thread which was continued.</param>
            <param name="allThreadsContinued">If allThreadsContinued is true, a debug adapter can announce that all threads have continued.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent">
            <summary>
            Event message for 'exited' event type.
            The event indicates that the debuggee has exited.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent.ExitCode">
            <summary>
            The exit code returned from the debuggee.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExitedEvent"/> class.
            </summary>
            <param name="exitCode">The exit code returned from the debuggee.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializedEvent">
            <summary>
            Event message for 'initialized' event type.
            This event indicates that the debug adapter is ready to accept configuration requests (e.g. SetBreakpointsRequest, SetExceptionBreakpointsRequest).
            A debug adapter is expected to send this event when it is ready to accept configuration requests (but not before the InitializeRequest has finished).
            The sequence of events/requests is as follows:
            - adapters sends InitializedEvent (after the InitializeRequest has returned)
            - frontend sends zero or more SetBreakpointsRequest
            - frontend sends one SetFunctionBreakpointsRequest
            - frontend sends a SetExceptionBreakpointsRequest if one or more exceptionBreakpointFilters have been defined (or if supportsConfigurationDoneRequest is not defined or false)
            - frontend sends other future configuration requests
            - frontend sends one ConfigurationDoneRequest to indicate the end of the configuration
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializedEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializedEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializedEvent"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent">
            <summary>
            Event message for 'module' event type.
            The event indicates that some information about a module has changed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.Reason">
            <summary>
            The reason for the event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.Module">
            <summary>
            The new, changed, or removed module. In case of 'removed' only the module id is used.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.VsMessage">
            <summary>
            Visual Studio-only property containing the message to be displayed in the output window. For other editors, this should be sent as a separate OutputEvent. If not provided, a default value should be used instead. This string should NOT end in a trailing new line.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent.ReasonValue,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModuleEvent"/> class.
            </summary>
            <param name="reason">The reason for the event.</param>
            <param name="module">The new, changed, or removed module. In case of 'removed' only the module id is used.</param>
            <param name="vsMessage">Visual Studio-only property containing the message to be displayed in the output window. For other editors, this should be sent as a separate OutputEvent. If not provided, a default value should be used instead. This string should NOT end in a trailing new line.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent">
            <summary>
            Event message for 'output' event type.
            The event indicates that the target has produced some output.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.Category">
            <summary>
            The category of output (such as: 'console', 'stdout', 'stderr', 'telemetry'). If not specified, 'console' is assumed.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.Output">
            <summary>
            The output to report.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.VariablesReference">
            <summary>
            If an attribute 'variablesReference' exists and its value is > 0, the output contains objects which can be retrieved by passing variablesReference to the VariablesRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.Data">
            <summary>
            Optional data to report. For the 'telemetry' category the data will be sent to telemetry, for the other categories the data is shown in JSON format.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.#ctor(System.String,System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent.CategoryValue},System.Nullable{System.Int32},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.OutputEvent"/> class.
            </summary>
            <param name="output">The output to report.</param>
            <param name="category">The category of output (such as: 'console', 'stdout', 'stderr', 'telemetry'). If not specified, 'console' is assumed.</param>
            <param name="variablesReference">If an attribute 'variablesReference' exists and its value is > 0, the output contains objects which can be retrieved by passing variablesReference to the VariablesRequest.</param>
            <param name="data">Optional data to report. For the 'telemetry' category the data will be sent to telemetry, for the other categories the data is shown in JSON format.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent">
            <summary>
            Event message for 'process' event type.
            The event indicates that the debugger has begun debugging a new process. Either one that it has launched, or one that it has attached to.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.Name">
            <summary>
            The logical name of the process. This is usually the full path to process's executable file. Example: /home/example/myproj/program.js.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.SystemProcessId">
            <summary>
            The system process id of the debugged process. This property will be missing for non-system processes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.IsLocalProcess">
            <summary>
            If true, the process is running on the same computer as the debug adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.StartMethod">
            <summary>
            Describes how the debug engine started debugging this process.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent.StartMethodValue})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProcessEvent"/> class.
            </summary>
            <param name="name">The logical name of the process. This is usually the full path to process's executable file. Example: /home/example/myproj/program.js.</param>
            <param name="systemProcessId">The system process id of the debugged process. This property will be missing for non-system processes.</param>
            <param name="isLocalProcess">If true, the process is running on the same computer as the debug adapter.</param>
            <param name="startMethod">Describes how the debug engine started debugging this process.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent">
            <summary>
            Event message for 'script' event type.
            The event indicates that some information about a script has changed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.Reason">
            <summary>
            The reason for the event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.Script">
            <summary>
            The new or removed script. In case of 'removed' only the script id is used.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent.ReasonValue,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScriptEvent"/> class.
            </summary>
            <param name="reason">The reason for the event.</param>
            <param name="script">The new or removed script. In case of 'removed' only the script id is used.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent">
            <summary>
            Event message for 'stopped' event type.
            The event indicates that the execution of the debuggee has stopped due to some condition.
            This can be caused by a break point previously set, a stepping action has completed, by executing a debugger statement etc.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.Reason">
            <summary>
            The reason for the event (such as: 'step', 'breakpoint', 'exception', 'pause', 'entry').
            For backward compatibility this string is shown in the UI if the 'description' attribute is missing (but it must not be translated).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.Description">
            <summary>
            The full reason for the event, e.g. 'Paused on exception'. This string is shown in the UI as is.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.ThreadId">
            <summary>
            The thread which was stopped.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.Text">
            <summary>
            Additional information. E.g. if reason is 'exception', text contains the exception name. This string is shown in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.AllThreadsStopped">
            <summary>
            If allThreadsStopped is true, a debug adapter can announce that all threads have stopped.
            *  The client should use this information to enable that all threads can be expanded to access their stacktraces.
            *  If the attribute is missing or false, only the thread with the given threadId can be expanded.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent.ReasonValue,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StoppedEvent"/> class.
            </summary>
            <param name="reason">The reason for the event (such as: 'step', 'breakpoint', 'exception', 'pause', 'entry'). For backward compatibility this string is shown in the UI if the 'description' attribute is missing (but it must not be translated).</param>
            <param name="description">The full reason for the event, e.g. 'Paused on exception'. This string is shown in the UI as is.</param>
            <param name="threadId">The thread which was stopped.</param>
            <param name="text">Additional information. E.g. if reason is 'exception', text contains the exception name. This string is shown in the UI.</param>
            <param name="allThreadsStopped">If allThreadsStopped is true, a debug adapter can announce that all threads have stopped. *  The client should use this information to enable that all threads can be expanded to access their stacktraces. *  If the attribute is missing or false, only the thread with the given threadId can be expanded.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent">
            <summary>
            Event message for 'terminated' event types.
            The event indicates that debugging of the debuggee has terminated.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent.Restart">
            <summary>
            A debug adapter may set 'restart' to true (or to an arbitrary object) to request that the front end restarts the session.
            The value is not interpreted by the client and passed unmodified as an attribute '__restart' to the launchRequest.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent.#ctor(System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.TerminatedEvent"/> class.
            </summary>
            <param name="restart">A debug adapter may set 'restart' to true (or to an arbitrary object) to request that the front end restarts the session. The value is not interpreted by the client and passed unmodified as an attribute '__restart' to the launchRequest.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent">
            <summary>
            Event message for 'thread' event type.
            The event indicates that a thread has started or exited.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.EventType">
            <summary>
            Protocol type for this event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.Reason">
            <summary>
            The reason for the event (such as: 'started', 'exited').
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.ThreadId">
            <summary>
            The identifier of the thread.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent.ReasonValue,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadEvent"/> class.
            </summary>
            <param name="reason">The reason for the event (such as: 'started', 'exited').</param>
            <param name="threadId">The identifier of the thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent">
            <summary>
            Server-initiated event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent.EventType">
            <summary>
            Type of event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent.Body">
            <summary>
            Event-specific information.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent.#ctor(System.String,System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent"/> class.
            </summary>
            <param name="eventType">Type of event.</param>
            <param name="body">Event-specific information.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolEvent.ToString">
            <summary>
            Returns a string containing a prefix to use when logging this message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage">
            <summary>
            Base class of requests, responses, and events.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage.Seq">
            <summary>
            Sequence number.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage.Type">
            <summary>
            One of 'request', 'response', or 'event'.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage.TypeValue)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolMessage"/> class.
            </summary>
            <param name="type">The protocol type of the message.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest">
            <summary>
            A client or server-initiated request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest.Command">
            <summary>
            The command to execute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest.Arguments">
            <summary>
            Object containing arguments for the command.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest"/> class.
            </summary>
            <param name="seq">Sequence number.</param>
            <param name="command">The command to execute.</param>
            <param name="args">Object containing arguments for the command.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolRequest.ToString">
            <summary>
            Returns a string containing a prefix to use when logging this message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse">
            <summary>
            Response to a request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.RequestSeq">
            <summary>
            Sequence number of the corresponding request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.Success">
            <summary>
            Outcome of the request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.Command">
            <summary>
            The command requested.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.Message">
            <summary>
            Contains error message if success == false.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.Body">
            <summary>
            Contains request result if success is true and optional error details if success is false.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.#ctor(System.Int32,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse"/> class.
            </summary>
            <param name="requestSeq">Sequence number of the corresponding request.</param>
            <param name="command">The command requested.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ProtocolResponse.ToString">
            <summary>
            Returns a string containing a prefix to use when logging this message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachArguments">
            <summary>
            Arguments for 'attach' request.
            The attach request has no standardized attributes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachArguments.ConfigurationProperties">
            <summary>
            Additional data that may be present in the protocol message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest">
            <summary>
            Attach request; value of command field is 'attach'.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachRequest"/> class.
            </summary>
            <param name="configurationProperties">Additional data that may be present in the protocol message.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments">
            <summary>
            Arguments for 'completions' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments.FrameId">
            <summary>
            Returns completions in the scope of this stack frame. If not specified, the completions are returned for the global scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments.Text">
            <summary>
            One or more source lines. Typically this is the text a user has typed into the debug console before he asked for completion.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments.Column">
            <summary>
            The character position for which to determine the completion proposals.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsArguments.Line">
            <summary>
            An optional line for which to determine the completion proposals. If missing the first line of the text is assumed.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest">
            <summary>
            CompletionsRequest request; value of command field is 'completions'.
            Returns a list of possible completions for a given caret position and text.
            The CompletionsRequest may only be called if the 'supportsCompletionsRequest' capability exists and is true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest.#ctor(System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsRequest"/> class.
            </summary>
            <param name="text">One or more source lines. Typically this is the text a user has typed into the debug console before he asked for completion.</param>
            <param name="column">The character position for which to determine the completion proposals.</param>
            <param name="frameId">Returns completions in the scope of this stack frame. If not specified, the completions are returned for the global scope.</param>
            <param name="line">An optional line for which to determine the completion proposals. If missing the first line of the text is assumed.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneArguments">
            <summary>
            Arguments for 'configurationDone' request.
            The configurationDone request has no standardized attributes.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneRequest">
            <summary>
            ConfigurationDone request; value of command field is 'configurationDone'.
            The client of the debug protocol must send this request at the end of the sequence of configuration requests (which was started by the InitializedEvent).
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneRequest"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueArguments">
            <summary>
            Arguments for 'continue' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueArguments.ThreadId">
            <summary>
            Continue execution for the specified thread (if possible). If the backend cannot continue on a single thread but will continue on all threads, it should set the allThreadsContinued attribute in the response to true.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest">
            <summary>
            Continue request; value of command field is 'continue'.
            The request starts the debuggee to run again.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueRequest"/> class.
            </summary>
            <param name="threadId">Continue execution for the specified thread (if possible). If the backend cannot continue on a single thread but will continue on all threads, it should set the allThreadsContinued attribute in the response to true.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectArguments">
            <summary>
            Arguments for 'disconnect' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectArguments.TerminateDebuggee">
            <summary>
            Indicates whether the debuggee should be terminated when the debugger is disconnected.
            If unspecified, the debug adapter is free to do whatever it thinks is best.
            A client can only rely on this attribute being properly honored if a debug adapter returns true for the 'supportTerminateDebuggee' capability.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest">
            <summary>
            Disconnect request; value of command field is 'disconnect'.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectRequest"/> class.
            </summary>
            <param name="terminateDebuggee">Indicates whether the debuggee should be terminated when the debugger is disconnected. If unspecified, the debug adapter is free to do whatever it thinks is best. A client can only rely on this attribute being properly honored if a debug adapter returns true for the 'supportTerminateDebuggee' capability.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments">
            <summary>
            Arguments for 'evaluate' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.Expression">
            <summary>
            The expression to evaluate.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.FrameId">
            <summary>
            Evaluate the expression in the scope of this stack frame. If not specified, the expression is evaluated in the global scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.Context">
            <summary>
            The context in which the evaluate request is run. Possible values are 'watch' if evaluate is run in a watch, 'repl' if run from the REPL console, or 'hover' if run from a data hover.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.Format">
            <summary>
            Specifies details on how to format the Evaluate result.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.NoSideEffects">
            <summary>
            Evaluate without side effects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.NoFuncEval">
            <summary>
            Exclude funceval during evaluation.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.Timeout">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest">
            <summary>
            Evaluate request; value of command field is 'evaluate'.
            Evaluates the given expression in the context of the top most stack frame.
            The expression has access to any variables and arguments that are in scope.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateArguments.ContextValue},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateRequest"/> class.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="frameId">Evaluate the expression in the scope of this stack frame. If not specified, the expression is evaluated in the global scope.</param>
            <param name="context">The context in which the evaluate request is run. Possible values are 'watch' if evaluate is run in a watch, 'repl' if run from the REPL console, or 'hover' if run from a data hover.</param>
            <param name="format">Specifies details on how to format the Evaluate result.</param>
            <param name="noSideEffects">Evaluate without side effects.</param>
            <param name="noFuncEval">Exclude funceval during evaluation.</param>
            <param name="timeout">Timeout in milliseconds.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoArguments">
            <summary>
            Arguments for 'exceptionInfo' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoArguments.ThreadId">
            <summary>
            Thread for which exception information should be retrieved.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest">
            <summary>
            ExceptionInfoRequest request; value of command field is 'exceptionInfo'.
            Retrieves the details of the exception that caused the StoppedEvent to be raised.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoRequest"/> class.
            </summary>
            <param name="threadId">Thread for which exception information should be retrieved.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoArguments">
            <summary>
            Arguments for 'goto' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoArguments.ThreadId">
            <summary>
            Set the goto target for this thread.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoArguments.TargetId">
            <summary>
            The location where the debuggee will continue to run.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest">
            <summary>
            Goto request; value of command field is 'goto'.
            The request sets the location where the debuggee will continue to run.
            This makes it possible to skip the execution of code or to executed code again.
            The code between the current location and the goto target is not executed but skipped.
            The debug adapter first sends the GotoResponse and then a StoppedEvent (event type 'goto').
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoRequest"/> class.
            </summary>
            <param name="threadId">Set the goto target for this thread.</param>
            <param name="targetId">The location where the debuggee will continue to run.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsArguments">
            <summary>
            Arguments for 'gotoTargets' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsArguments.Source">
            <summary>
            The source location for which the goto targets are determined.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsArguments.Line">
            <summary>
            The line location for which the goto targets are determined.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsArguments.Column">
            <summary>
            An optional column location for which the goto targets are determined.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest">
            <summary>
            GotoTargets request; value of command field is 'gotoTargets'.
            This request retrieves the possible goto targets for the specified source location.
            These targets can be used in the 'goto' request.
            The GotoTargets request may only be called if the 'supportsGotoTargetsRequest' capability exists and is true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsRequest"/> class.
            </summary>
            <param name="source">The source location for which the goto targets are determined.</param>
            <param name="line">The line location for which the goto targets are determined.</param>
            <param name="column">An optional column location for which the goto targets are determined.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeArguments">
            <summary>
            Arguments for 'handshake' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeArguments.Value">
            <summary>
            Value for which a signature should be calculated.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest">
            <summary>
            Requests that the debug adapter host performs a handshake.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeRequest"/> class.
            </summary>
            <param name="value">Value for which a signature should be calculated.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments">
            <summary>
            Arguments for 'initialize' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.ClientID">
            <summary>
            The ID of the (frontend) client using this adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.AdapterID">
            <summary>
            The ID of the debug adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.LinesStartAt1">
            <summary>
            If true all line numbers are 1-based (default).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.ColumnsStartAt1">
            <summary>
            If true all column numbers are 1-based (default).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.PathFormat">
            <summary>
            Determines in what format paths are specified. Possible values are 'path' or 'uri'. The default is 'path', which is the native format.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.SupportsVariableType">
            <summary>
            Client supports the optional type attribute for variables.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.SupportsVariablePaging">
            <summary>
            Client supports the paging of variables.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.SupportsRunInTerminalRequest">
            <summary>
            Client supports the runInTerminal request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.SupportsHandshakeRequest">
            <summary>
            Client supports the handshake request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest">
            <summary>
            Initialize request; value of command field is 'initialize'.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest.#ctor(System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeArguments.PathFormatValue},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeRequest"/> class.
            </summary>
            <param name="adapterID">The ID of the debug adapter.</param>
            <param name="clientID">The ID of the (frontend) client using this adapter.</param>
            <param name="linesStartAt1">If true all line numbers are 1-based (default).</param>
            <param name="columnsStartAt1">If true all column numbers are 1-based (default).</param>
            <param name="pathFormat">Determines in what format paths are specified. Possible values are 'path' or 'uri'. The default is 'path', which is the native format.</param>
            <param name="supportsVariableType">Client supports the optional type attribute for variables.</param>
            <param name="supportsVariablePaging">Client supports the paging of variables.</param>
            <param name="supportsRunInTerminalRequest">Client supports the runInTerminal request.</param>
            <param name="supportsHandshakeRequest">Client supports the handshake request.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchArguments">
            <summary>
            Arguments for 'launch' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchArguments.NoDebug">
            <summary>
            If noDebug is true the launch request should launch the program without enabling debugging.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchArguments.ConfigurationProperties">
            <summary>
            Additional data that may be present in the protocol message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest">
            <summary>
            Launch request; value of command field is 'launch'.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest.#ctor(System.Nullable{System.Boolean},System.Collections.Generic.Dictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchRequest"/> class.
            </summary>
            <param name="noDebug">If noDebug is true the launch request should launch the program without enabling debugging.</param>
            <param name="configurationProperties">Additional data that may be present in the protocol message.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesArguments">
            <summary>
            Arguments for 'modules' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesArguments.StartModule">
            <summary>
            The index of the first module to return; if omitted modules start at 0.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesArguments.ModuleCount">
            <summary>
            The number of modules to return. If moduleCount is not specified or 0, all modules are returned.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest">
            <summary>
            Modules can be retrieved from the debug adapter with the ModulesRequest which can either return all modules or a range of modules to support paging.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesRequest"/> class.
            </summary>
            <param name="startModule">The index of the first module to return; if omitted modules start at 0.</param>
            <param name="moduleCount">The number of modules to return. If moduleCount is not specified or 0, all modules are returned.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextArguments">
            <summary>
            Arguments for 'next' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextArguments.ThreadId">
            <summary>
            Execute 'next' for this thread.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest">
            <summary>
            Next request; value of command field is 'next'.
            The request starts the debuggee to run again for one step.
            The debug adapter first sends the NextResponse and then a StoppedEvent (event type 'step') after the step has completed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextRequest"/> class.
            </summary>
            <param name="threadId">Execute 'next' for this thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseArguments">
            <summary>
            Arguments for 'pause' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseArguments.ThreadId">
            <summary>
            Pause execution for this thread.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest">
            <summary>
            Pause request; value of command field is 'pause'.
            The request suspenses the debuggee.
            The debug adapter first sends the PauseResponse and then a StoppedEvent (event type 'pause') after the thread has been paused successfully.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseRequest"/> class.
            </summary>
            <param name="threadId">Pause execution for this thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameArguments">
            <summary>
            Arguments for 'restartFrame' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameArguments.FrameId">
            <summary>
            Restart this stackframe.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest">
            <summary>
            RestartFrame request; value of command field is 'restartFrame'.
            The request restarts execution of the specified stackframe.
            The debug adapter first sends the RestartFrameResponse and then a StoppedEvent (event type 'restart') after the restart has completed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameRequest"/> class.
            </summary>
            <param name="frameId">Restart this stackframe.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartArguments">
            <summary>
            Arguments for 'restart' request.
            The restart request has no standardized attributes.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartRequest">
            <summary>
            Restart request; value of command field is 'restart'.
            Restarts a debug session. If the capability 'supportsRestartRequest' is missing or has the value false,
            the client will implement 'restart' by terminating the debug adapter first and then launching it anew.
            A debug adapter can override this default behaviour by implementing a restart request
            and setting the capability 'supportsRestartRequest' to true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartRequest"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueArguments">
            <summary>
            Arguments for 'reverseContinue' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueArguments.ThreadId">
            <summary>
            Exceute 'reverseContinue' for this thread.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest">
            <summary>
            ReverseContinue request; value of command field is 'reverseContinue'.
            The request starts the debuggee to run backward. Clients should only call this request if the capability supportsStepBack is true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueRequest"/> class.
            </summary>
            <param name="threadId">Exceute 'reverseContinue' for this thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments">
            <summary>
            Arguments for 'runInTerminal' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.Kind">
            <summary>
            What kind of terminal to launch.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.Title">
            <summary>
            Optional title of the terminal.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.Cwd">
            <summary>
            Working directory of the command.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.Args">
            <summary>
            List of arguments. The first argument is the command to run.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.Env">
            <summary>
            Environment key-value pairs that are added to the default environment.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest">
            <summary>
            runInTerminal request; value of command field is 'runInTerminal'.
            With this request a debug adapter can run a command in a terminal.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest.#ctor(System.String,System.Collections.Generic.List{System.String},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalArguments.KindValue},System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalRequest"/> class.
            </summary>
            <param name="cwd">Working directory of the command.</param>
            <param name="args">List of arguments. The first argument is the command to run.</param>
            <param name="kind">What kind of terminal to launch.</param>
            <param name="title">Optional title of the terminal.</param>
            <param name="env">Environment key-value pairs that are added to the default environment.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesArguments">
            <summary>
            Arguments for 'scopes' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesArguments.FrameId">
            <summary>
            Retrieve the scopes for this stackframe.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest">
            <summary>
            Scopes request; value of command field is 'scopes'.
            The request returns the variable scopes for a given stackframe ID.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesRequest"/> class.
            </summary>
            <param name="frameId">Retrieve the scopes for this stackframe.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments">
            <summary>
            Arguments for 'setBreakpoints' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments.Source">
            <summary>
            The source location of the breakpoints; either source.path or source.reference must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments.Breakpoints">
            <summary>
            The code locations of the breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments.Lines">
            <summary>
            Deprecated: The code locations of the breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsArguments.SourceModified">
            <summary>
            A value of true indicates that the underlying source has been modified which results in new breakpoint locations.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest">
            <summary>
            SetBreakpoints request; value of command field is 'setBreakpoints'.
            Sets multiple breakpoints for a single source and clears all previous breakpoints in that source.
            To clear all breakpoint for a source, specify an empty array.
            When a breakpoint is hit, a StoppedEvent (event type 'breakpoint') is generated.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint},System.Collections.Generic.List{System.Int32},System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsRequest"/> class.
            </summary>
            <param name="source">The source location of the breakpoints; either source.path or source.reference must be specified.</param>
            <param name="breakpoints">The code locations of the breakpoints.</param>
            <param name="lines">Deprecated: The code locations of the breakpoints.</param>
            <param name="sourceModified">A value of true indicates that the underlying source has been modified which results in new breakpoint locations.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyArguments">
            <summary>
            Arguments for 'setDebuggerProperty' request. Properties are determined by debugger.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyArguments.DebuggerProperties">
            <summary>
            Additional data that may be present in the protocol message.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest">
            <summary>
            Sets a debugger property.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest.#ctor(System.Collections.Generic.Dictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyRequest"/> class.
            </summary>
            <param name="debuggerProperties">Additional data that may be present in the protocol message.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsArguments">
            <summary>
            Arguments for 'setExceptionBreakpoints' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsArguments.Filters">
            <summary>
            IDs of checked exception options. The set of IDs is returned via the 'exceptionBreakpointFilters' capability.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsArguments.ExceptionOptions">
            <summary>
            Configuration options for selected exceptions.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest">
            <summary>
            SetExceptionBreakpoints request; value of command field is 'setExceptionBreakpoints'.
            The request configures the debuggers response to thrown exceptions. If an exception is configured to break, a StoppedEvent is fired (event type 'exception').
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsRequest"/> class.
            </summary>
            <param name="filters">IDs of checked exception options. The set of IDs is returned via the 'exceptionBreakpointFilters' capability.</param>
            <param name="exceptionOptions">Configuration options for selected exceptions.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments">
            <summary>
            Arguments for 'setExpression' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments.Expression">
            <summary>
            The expression to modify.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments.Value">
            <summary>
            The value to set the expression to.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments.Format">
            <summary>
            Specifies details on how to format the response result value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments.FrameId">
            <summary>
            Evaluate the expression in the scope of this stack frame. If not specified, the expression is evaluated in the global scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionArguments.Timeout">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest">
            <summary>
            Sets the value of an expression.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest.#ctor(System.String,System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionRequest"/> class.
            </summary>
            <param name="expression">The expression to modify.</param>
            <param name="value">The value to set the expression to.</param>
            <param name="format">Specifies details on how to format the response result value.</param>
            <param name="frameId">Evaluate the expression in the scope of this stack frame. If not specified, the expression is evaluated in the global scope.</param>
            <param name="timeout">Timeout in milliseconds.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsArguments">
            <summary>
            Arguments for 'setFunctionBreakpoints' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsArguments.Breakpoints">
            <summary>
            The function names of the breakpoints.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest">
            <summary>
            SetFunctionBreakpoints request; value of command field is 'setFunctionBreakpoints'.
            Sets multiple function breakpoints and clears all previous function breakpoints.
            To clear all function breakpoint, specify an empty array.
            When a function breakpoint is hit, a StoppedEvent (event type 'function breakpoint') is generated.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsRequest"/> class.
            </summary>
            <param name="breakpoints">The function names of the breakpoints.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments">
            <summary>
            Arguments for 'setVariable' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments.VariablesReference">
            <summary>
            The reference of the variable container.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments.Name">
            <summary>
            The name of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments.Value">
            <summary>
            The value of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments.Format">
            <summary>
            Specifies details on how to format the response value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableArguments.Timeout">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest">
            <summary>
            setVariable request; value of command field is 'setVariable'.
            Set the variable with the given name in the variable container to a new value.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest.#ctor(System.Int32,System.String,System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableRequest"/> class.
            </summary>
            <param name="variablesReference">The reference of the variable container.</param>
            <param name="name">The name of the variable.</param>
            <param name="value">The value of the variable.</param>
            <param name="format">Specifies details on how to format the response value.</param>
            <param name="timeout">Timeout in milliseconds.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceArguments">
            <summary>
            Arguments for 'source' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceArguments.Source">
            <summary>
            Specifies the source content to load. Either source.path or source.sourceReference must be specified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceArguments.SourceReference">
            <summary>
            The reference to the source. This is the same as source.sourceReference. This is provided for backward compatibility since old backends do not understand the 'source' attribute.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest">
            <summary>
            Source request; value of command field is 'source'.
            The request retrieves the source code for a given source reference.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest.#ctor(System.Int32,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceRequest"/> class.
            </summary>
            <param name="sourceReference">The reference to the source. This is the same as source.sourceReference. This is provided for backward compatibility since old backends do not understand the 'source' attribute.</param>
            <param name="source">Specifies the source content to load. Either source.path or source.sourceReference must be specified.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments">
            <summary>
            Arguments for 'stackTrace' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments.ThreadId">
            <summary>
            Retrieve the stacktrace for this thread.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments.StartFrame">
            <summary>
            The index of the first frame to return; if omitted frames start at 0.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments.Levels">
            <summary>
            The maximum number of frames to return. If levels is not specified or 0, all frames are returned.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceArguments.Format">
            <summary>
            Specifies details on how to format the stack frames.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest">
            <summary>
            StackTrace request; value of command field is 'stackTrace'. The request returns a stacktrace from the current execution state.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest.#ctor(System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceRequest"/> class.
            </summary>
            <param name="threadId">Retrieve the stacktrace for this thread.</param>
            <param name="startFrame">The index of the first frame to return; if omitted frames start at 0.</param>
            <param name="levels">The maximum number of frames to return. If levels is not specified or 0, all frames are returned.</param>
            <param name="format">Specifies details on how to format the stack frames.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackArguments">
            <summary>
            Arguments for 'stepBack' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackArguments.ThreadId">
            <summary>
            Exceute 'stepBack' for this thread.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest">
            <summary>
            StepBack request; value of command field is 'stepBack'.
            The request starts the debuggee to run one step backwards.
            The debug adapter first sends the StepBackResponse and then a StoppedEvent (event type 'step') after the step has completed. Clients should only call this request if the capability supportsStepBack is true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackRequest"/> class.
            </summary>
            <param name="threadId">Exceute 'stepBack' for this thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInArguments">
            <summary>
            Arguments for 'stepIn' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInArguments.ThreadId">
            <summary>
            Execute 'stepIn' for this thread.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInArguments.TargetId">
            <summary>
            Optional id of the target to step into.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest">
            <summary>
            StepIn request; value of command field is 'stepIn'.
            The request starts the debuggee to step into a function/method if possible.
            If it cannot step into a target, 'stepIn' behaves like 'next'.
            The debug adapter first sends the StepInResponse and then a StoppedEvent (event type 'step') after the step has completed.
            If there are multiple function/method calls (or other targets) on the source line,
            the optional argument 'targetId' can be used to control into which target the 'stepIn' should occur.
            The list of possible targets for a given source line can be retrieved via the 'stepInTargets' request.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest.#ctor(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInRequest"/> class.
            </summary>
            <param name="threadId">Execute 'stepIn' for this thread.</param>
            <param name="targetId">Optional id of the target to step into.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsArguments">
            <summary>
            Arguments for 'stepInTargets' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsArguments.FrameId">
            <summary>
            The stack frame for which to retrieve the possible stepIn targets.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest">
            <summary>
            StepInTargets request; value of command field is 'stepInTargets'.
            This request retrieves the possible stepIn targets for the specified stack frame.
            These targets can be used in the 'stepIn' request.
            The StepInTargets may only be called if the 'supportsStepInTargetsRequest' capability exists and is true.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsRequest"/> class.
            </summary>
            <param name="frameId">The stack frame for which to retrieve the possible stepIn targets.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutArguments">
            <summary>
            Arguments for 'stepOut' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutArguments.ThreadId">
            <summary>
            Execute 'stepOut' for this thread.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest">
            <summary>
            StepOut request; value of command field is 'stepOut'.
            The request starts the debuggee to run again for one step.
            The debug adapter first sends the StepOutResponse and then a StoppedEvent (event type 'step') after the step has completed.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutRequest"/> class.
            </summary>
            <param name="threadId">Execute 'stepOut' for this thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsArguments">
            <summary>
            Arguments for 'threads' request.
            The threads request has no standardized attributes.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsRequest">
            <summary>
            Thread request; value of command field is 'threads'.
            The request retrieves a list of all threads.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsRequest"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments">
            <summary>
            Arguments for 'variables' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.VariablesReference">
            <summary>
            The Variable reference.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.Filter">
            <summary>
            Optional filter to limit the child variables to either named or indexed. If ommited, both types are fetched.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.Start">
            <summary>
            The index of the first variable to return; if omitted children start at 0.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.Count">
            <summary>
            The number of variables to return. If count is missing or 0, all variables are returned.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.Format">
            <summary>
            Specifies details on how to format the Variable values.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.Timeout">
            <summary>
            Timeout in milliseconds.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest">
            <summary>
            Variables request; value of command field is 'variables'.
            Retrieves all child variables for the given variable reference.
            An optional filter can be used to limit the fetched children to either named or indexed children.
            </summary>
        </member>
        <member name="F:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest.RequestType">
            <summary>
            Protocol type for this request.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest.#ctor(System.Int32,System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesArguments.FilterValue},System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesRequest"/> class.
            </summary>
            <param name="variablesReference">The Variable reference.</param>
            <param name="filter">Optional filter to limit the child variables to either named or indexed. If ommited, both types are fetched.</param>
            <param name="start">The index of the first variable to return; if omitted children start at 0.</param>
            <param name="count">The number of variables to return. If count is missing or 0, all variables are returned.</param>
            <param name="format">Specifies details on how to format the Variable values.</param>
            <param name="timeout">Timeout in milliseconds.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachResponse">
            <summary>
            Response to 'attach' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.AttachResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse">
            <summary>
            Response to 'completions' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse.Targets">
            <summary>
            The possible completions for .
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionsResponse"/> class.
            </summary>
            <param name="targets">The possible completions for .</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneResponse">
            <summary>
            Response to 'configurationDone' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ConfigurationDoneResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse">
            <summary>
            Response to 'continue' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse.AllThreadsContinued">
            <summary>
            If true, the continue request has ignored the specified thread and continued all threads instead. If this attribute is missing a value of 'true' is assumed for backward compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ContinueResponse"/> class.
            </summary>
            <param name="allThreadsContinued">If true, the continue request has ignored the specified thread and continued all threads instead. If this attribute is missing a value of 'true' is assumed for backward compatibility.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectResponse">
            <summary>
            Response to 'disconnect' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DisconnectResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse">
            <summary>
            On error that is whenever 'success' is false, the body can provide more details.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse.Error">
            <summary>
            An optional, structured error message.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse"/> class.
            </summary>
            <param name="error">An optional, structured error message.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ErrorResponse"/> class.
            </summary>
            <param name="ex">The <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> to use to populate the fields of the response.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse">
            <summary>
            Response to 'evaluate' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.Result">
            <summary>
            The result of the evaluate request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.Type">
            <summary>
            The optional type of the evaluate result.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.VariablesReference">
            <summary>
            If variablesReference is > 0, the evaluate result is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.NamedVariables">
            <summary>
            The number of named child variables.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.IndexedVariables">
            <summary>
            The number of indexed child variables.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.EvaluationAttribute">
            <summary>
            Optional attributes describing the type to help with display.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse.#ctor(System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluateResponse"/> class.
            </summary>
            <param name="result">The result of the evaluate request.</param>
            <param name="variablesReference">If variablesReference is > 0, the evaluate result is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.</param>
            <param name="type">The optional type of the evaluate result.</param>
            <param name="namedVariables">The number of named child variables. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
            <param name="indexedVariables">The number of indexed child variables. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
            <param name="evaluationAttribute">Optional attributes describing the type to help with display.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse">
            <summary>
            Response to 'exceptionInfo' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.ExceptionId">
            <summary>
            ID of the exception that was thrown.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.Description">
            <summary>
            Descriptive text for the exception provided by the debug adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.BreakMode">
            <summary>
            Mode that caused the exception notification to be raised.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.Details">
            <summary>
            Detailed information about the exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.Code">
            <summary>
            Numeric code for the exception provided by the debug adapter, if any.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse.#ctor(System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakMode,System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionInfoResponse"/> class.
            </summary>
            <param name="exceptionId">ID of the exception that was thrown.</param>
            <param name="breakMode">Mode that caused the exception notification to be raised.</param>
            <param name="description">Descriptive text for the exception provided by the debug adapter.</param>
            <param name="details">Detailed information about the exception.</param>
            <param name="code">Numeric code for the exception provided by the debug adapter, if any.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoResponse">
            <summary>
            Response to 'goto' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse">
            <summary>
            Response to 'gotoTargets' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse.Targets">
            <summary>
            The possible goto targets of the specified location.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTargetsResponse"/> class.
            </summary>
            <param name="targets">The possible goto targets of the specified location.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse">
            <summary>
            Response to 'handshake' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse.Signature">
            <summary>
            Signature calculated for the provided value.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.HandshakeResponse"/> class.
            </summary>
            <param name="signature">Signature calculated for the provided value.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse">
            <summary>
            Response to 'initialize' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsConfigurationDoneRequest">
            <summary>
            The debug adapter supports the configurationDoneRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsFunctionBreakpoints">
            <summary>
            The debug adapter supports function breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsConditionalBreakpoints">
            <summary>
            The debug adapter supports conditional breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsHitConditionalBreakpoints">
            <summary>
            The debug adapter supports breakpoints that break execution after a specified number of hits.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsEvaluateForHovers">
            <summary>
            The debug adapter supports a (side effect free) evaluate request for data hovers.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.ExceptionBreakpointFilters">
            <summary>
            Available filters or options for the setExceptionBreakpoints request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsStepBack">
            <summary>
            The debug adapter supports stepping back via the stepBack and reverseContinue requests.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsSetVariable">
            <summary>
            The debug adapter supports setting a variable to a value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsRestartFrame">
            <summary>
            The debug adapter supports restarting a frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsGotoTargetsRequest">
            <summary>
            The debug adapter supports the gotoTargetsRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsStepInTargetsRequest">
            <summary>
            The debug adapter supports the stepInTargetsRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsCompletionsRequest">
            <summary>
            The debug adapter supports the completionsRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsModulesRequest">
            <summary>
            The debug adapter supports the modules request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.AdditionalModuleColumns">
            <summary>
            The set of additional module information exposed by the debug adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportedChecksumAlgorithms">
            <summary>
            Checksum algorithms supported by the debug adapter.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsRestartRequest">
            <summary>
            The debug adapter supports the RestartRequest. In this case a client should not implement 'restart' by terminating and relaunching the adapter but by calling the RestartRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsExceptionOptions">
            <summary>
            The debug adapter supports 'exceptionOptions' on the setExceptionBreakpoints request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsValueFormattingOptions">
            <summary>
            The debug adapter supports a 'format' attribute on the stackTraceRequest, variablesRequest, and evaluateRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsExceptionInfoRequest">
            <summary>
            The debug adapter supports the exceptionInfo request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportTerminateDebuggee">
            <summary>
            The debug adapter supports the 'terminateDebuggee' attribute on the 'disconnect' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsDelayedStackTraceLoading">
            <summary>
            The debug adapter supports the delayed loading of parts of the stack, which requires that both the 'startFrame' and 'levels' arguments and the 'totalFrames' result of the 'StackTrace' request are supported.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsDebuggerProperties">
            <summary>
            The debug adapter supports the set debugger property request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.SupportsSetExpression">
            <summary>
            The debug adapter supports the set expression request
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor},System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ChecksumAlgorithm},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.InitializeResponse"/> class.
            </summary>
            <param name="supportsConfigurationDoneRequest">The debug adapter supports the configurationDoneRequest.</param>
            <param name="supportsFunctionBreakpoints">The debug adapter supports function breakpoints.</param>
            <param name="supportsConditionalBreakpoints">The debug adapter supports conditional breakpoints.</param>
            <param name="supportsHitConditionalBreakpoints">The debug adapter supports breakpoints that break execution after a specified number of hits.</param>
            <param name="supportsEvaluateForHovers">The debug adapter supports a (side effect free) evaluate request for data hovers.</param>
            <param name="exceptionBreakpointFilters">Available filters or options for the setExceptionBreakpoints request.</param>
            <param name="supportsStepBack">The debug adapter supports stepping back via the stepBack and reverseContinue requests.</param>
            <param name="supportsSetVariable">The debug adapter supports setting a variable to a value.</param>
            <param name="supportsRestartFrame">The debug adapter supports restarting a frame.</param>
            <param name="supportsGotoTargetsRequest">The debug adapter supports the gotoTargetsRequest.</param>
            <param name="supportsStepInTargetsRequest">The debug adapter supports the stepInTargetsRequest.</param>
            <param name="supportsCompletionsRequest">The debug adapter supports the completionsRequest.</param>
            <param name="supportsModulesRequest">The debug adapter supports the modules request.</param>
            <param name="additionalModuleColumns">The set of additional module information exposed by the debug adapter.</param>
            <param name="supportedChecksumAlgorithms">Checksum algorithms supported by the debug adapter.</param>
            <param name="supportsRestartRequest">The debug adapter supports the RestartRequest. In this case a client should not implement 'restart' by terminating and relaunching the adapter but by calling the RestartRequest.</param>
            <param name="supportsExceptionOptions">The debug adapter supports 'exceptionOptions' on the setExceptionBreakpoints request.</param>
            <param name="supportsValueFormattingOptions">The debug adapter supports a 'format' attribute on the stackTraceRequest, variablesRequest, and evaluateRequest.</param>
            <param name="supportsExceptionInfoRequest">The debug adapter supports the exceptionInfo request.</param>
            <param name="supportTerminateDebuggee">The debug adapter supports the 'terminateDebuggee' attribute on the 'disconnect' request.</param>
            <param name="supportsDelayedStackTraceLoading">The debug adapter supports the delayed loading of parts of the stack, which requires that both the 'startFrame' and 'levels' arguments and the 'totalFrames' result of the 'StackTrace' request are supported.</param>
            <param name="supportsDebuggerProperties">The debug adapter supports the set debugger property request.</param>
            <param name="supportsSetExpression">The debug adapter supports the set expression request</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchResponse">
            <summary>
            Response to 'launch' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.LaunchResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse">
            <summary>
            Response to 'modules' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse.Modules">
            <summary>
            All modules or range of modules.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse.TotalModules">
            <summary>
            The total number of modules available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ModulesResponse"/> class.
            </summary>
            <param name="modules">All modules or range of modules.</param>
            <param name="totalModules">The total number of modules available.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextResponse">
            <summary>
            Response to 'next' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.NextResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseResponse">
            <summary>
            Response to 'pause' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.PauseResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameResponse">
            <summary>
            Response to 'restartFrame' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartFrameResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartResponse">
            <summary>
            Response to 'restart' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RestartResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueResponse">
            <summary>
            Response to 'reverseContinue' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ReverseContinueResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse">
            <summary>
            Response to Initialize request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse.ProcessId">
            <summary>
            The process ID.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse.#ctor(System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.RunInTerminalResponse"/> class.
            </summary>
            <param name="processId">The process ID.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse">
            <summary>
            Response to 'scopes' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse.Scopes">
            <summary>
            The scopes of the stackframe. If the array has length zero, there are no scopes available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ScopesResponse"/> class.
            </summary>
            <param name="scopes">The scopes of the stackframe. If the array has length zero, there are no scopes available.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse">
            <summary>
            Response to 'setBreakpoints' request.
            Returned is information about each breakpoint created by this request.
            This includes the actual code location and whether the breakpoint could be verified.
            The breakpoints returned are in the same order as the elements of the 'breakpoints'
            (or the deprecated 'lines') in the SetBreakpointsArguments.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse.Breakpoints">
            <summary>
            Information about the breakpoints. The array elements are in the same order as the elements of the 'breakpoints' (or the deprecated 'lines') in the SetBreakpointsArguments.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetBreakpointsResponse"/> class.
            </summary>
            <param name="breakpoints">Information about the breakpoints. The array elements are in the same order as the elements of the 'breakpoints' (or the deprecated 'lines') in the SetBreakpointsArguments.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyResponse">
            <summary>
            Response to 'setDebuggerProperty' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetDebuggerPropertyResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsResponse">
            <summary>
            Response to 'setExceptionBreakpoints' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExceptionBreakpointsResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse">
            <summary>
            Response to 'setExpression' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse.Value">
            <summary>
            The new value of the expression.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetExpressionResponse"/> class.
            </summary>
            <param name="value">The new value of the expression.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse">
            <summary>
            Response to 'setFunctionBreakpoints' request.
            Returned is information about each breakpoint created by this request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse.Breakpoints">
            <summary>
            Information about the breakpoints. The array elements correspond to the elements of the 'breakpoints' array.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetFunctionBreakpointsResponse"/> class.
            </summary>
            <param name="breakpoints">Information about the breakpoints. The array elements correspond to the elements of the 'breakpoints' array.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse">
            <summary>
            Response to 'setVariable' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.Value">
            <summary>
            The new value of the variable.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.Type">
            <summary>
            The type of the new value. Typically shown in the UI when hovering over the value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.VariablesReference">
            <summary>
            If variablesReference is > 0, the new value is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.NamedVariables">
            <summary>
            The number of named child variables.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.IndexedVariables">
            <summary>
            The number of indexed child variables.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SetVariableResponse"/> class.
            </summary>
            <param name="value">The new value of the variable.</param>
            <param name="type">The type of the new value. Typically shown in the UI when hovering over the value.</param>
            <param name="variablesReference">If variablesReference is > 0, the new value is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.</param>
            <param name="namedVariables">The number of named child variables. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
            <param name="indexedVariables">The number of indexed child variables. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse">
            <summary>
            Response to 'source' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse.Content">
            <summary>
            Content of the source reference.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse.MimeType">
            <summary>
            Optional content type (mime type) of the source.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceResponse"/> class.
            </summary>
            <param name="content">Content of the source reference.</param>
            <param name="mimeType">Optional content type (mime type) of the source.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse">
            <summary>
            Response to 'stackTrace' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse.StackFrames">
            <summary>
            The frames of the stackframe. If the array has length zero, there are no stackframes available.
            This means that there is no location information available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse.TotalFrames">
            <summary>
            The total number of frames available.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackTraceResponse"/> class.
            </summary>
            <param name="stackFrames">The frames of the stackframe. If the array has length zero, there are no stackframes available. This means that there is no location information available.</param>
            <param name="totalFrames">The total number of frames available.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackResponse">
            <summary>
            Response to 'stepBack' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepBackResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInResponse">
            <summary>
            Response to 'stepIn' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse">
            <summary>
            Response to 'stepInTargets' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse.Targets">
            <summary>
            The possible stepIn targets of the specified source location.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTargetsResponse"/> class.
            </summary>
            <param name="targets">The possible stepIn targets of the specified source location.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutResponse">
            <summary>
            Response to 'stepOut' request. This is just an acknowledgement, so no body field is required.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepOutResponse"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse">
            <summary>
            Response to 'threads' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse.Threads">
            <summary>
            All threads.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ThreadsResponse"/> class.
            </summary>
            <param name="threads">All threads.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse">
            <summary>
            Response to 'variables' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse.Variables">
            <summary>
            All (or a range) of variables for the given variable reference.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse.#ctor(System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.VariablesResponse"/> class.
            </summary>
            <param name="variables">All (or a range) of variables for the given variable reference.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint">
            <summary>
            Information about a Breakpoint created in setBreakpoints or setFunctionBreakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Id">
            <summary>
            An optional unique identifier for the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Verified">
            <summary>
            If true breakpoint could be set (but not necessarily at the desired location).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Message">
            <summary>
            An optional message about the state of the breakpoint. This is shown to the user and can be used to explain why a breakpoint could not be verified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Source">
            <summary>
            The source where the breakpoint is located.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Line">
            <summary>
            The start line of the actual range covered by the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.Column">
            <summary>
            An optional start column of the actual range covered by the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.EndLine">
            <summary>
            An optional end line of the actual range covered by the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.EndColumn">
            <summary>
            An optional end column of the actual range covered by the breakpoint. If no end line is given, then the end column is assumed to be in the start line.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint.#ctor(System.Boolean,System.Nullable{System.Int32},System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Breakpoint"/> class.
            </summary>
            <param name="verified">If true breakpoint could be set (but not necessarily at the desired location).</param>
            <param name="id">An optional unique identifier for the breakpoint.</param>
            <param name="message">An optional message about the state of the breakpoint. This is shown to the user and can be used to explain why a breakpoint could not be verified.</param>
            <param name="source">The source where the breakpoint is located.</param>
            <param name="line">The start line of the actual range covered by the breakpoint.</param>
            <param name="column">An optional start column of the actual range covered by the breakpoint.</param>
            <param name="endLine">An optional end line of the actual range covered by the breakpoint.</param>
            <param name="endColumn">An optional end column of the actual range covered by the breakpoint. If no end line is given, then the end column is assumed to be in the start line.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum">
            <summary>
            The checksum of an item calculated by the specified algorithm.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum.Algorithm">
            <summary>
            The algorithm used to calculate this checksum.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum.ChecksumValue">
            <summary>
            Value of the checksum.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ChecksumAlgorithm,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum"/> class.
            </summary>
            <param name="algorithm">The algorithm used to calculate this checksum.</param>
            <param name="checksumValue">Value of the checksum.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ChecksumAlgorithm">
            <summary>
            Names of checksum algorithms that may be supported by a debug adapter.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor">
            <summary>
            A ColumnDescriptor specifies what module attribute to show in a column of the ModulesView, how to format it, and what the column's label should be.
            It is only used if the underlying UI actually supports this level of customization.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.AttributeName">
            <summary>
            Name of the attribute rendered in this column.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.Label">
            <summary>
            Header UI label of column.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.Format">
            <summary>
            Format to use for the rendered values in this column. TBD how the format strings looks like.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.Type">
            <summary>
            Datatype of values in this column.  Defaults to 'string' if not specified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.Width">
            <summary>
            Width of this column in characters (hint only).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.#ctor(System.String,System.String,System.String,System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor.TypeValue},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ColumnDescriptor"/> class.
            </summary>
            <param name="attributeName">Name of the attribute rendered in this column.</param>
            <param name="label">Header UI label of column.</param>
            <param name="format">Format to use for the rendered values in this column. TBD how the format strings looks like.</param>
            <param name="type">Datatype of values in this column.  Defaults to 'string' if not specified.</param>
            <param name="width">Width of this column in characters (hint only).</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem">
            <summary>
            CompletionItems are the suggestions returned from the CompletionsRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.Label">
            <summary>
            The label of this completion item. By default this is also the text that is inserted when selecting this completion.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.Text">
            <summary>
            If text is not falsy then it is inserted instead of the label.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.Type">
            <summary>
            The item's type. Typically the client uses this information to render the item in the UI with an icon.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.Start">
            <summary>
            This value determines the location (in the CompletionsRequest's 'text' attribute) where the completion text is added.
            If missing the text is added at the location specified by the CompletionsRequest's 'column' attribute.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.Length">
            <summary>
            This value determines how many characters are overwritten by the completion text.
            If missing the value 0 is assumed which results in the completion text being inserted.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem.#ctor(System.String,System.String,System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItemType},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItem"/> class.
            </summary>
            <param name="label">The label of this completion item. By default this is also the text that is inserted when selecting this completion.</param>
            <param name="text">If text is not falsy then it is inserted instead of the label.</param>
            <param name="type">The item's type. Typically the client uses this information to render the item in the UI with an icon.</param>
            <param name="start">This value determines the location (in the CompletionsRequest's 'text' attribute) where the completion text is added. If missing the text is added at the location specified by the CompletionsRequest's 'column' attribute.</param>
            <param name="length">This value determines how many characters are overwritten by the completion text. If missing the value 0 is assumed which results in the completion text being inserted.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.CompletionItemType">
            <summary>
            Some predefined types for the CompletionItem. Please note that not all clients have specific icons for all of them.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes">
            <summary>
            Defines additional flags to help display evaluated objects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.IsFailedEvaluation">
            <summary>
            Evaluation of the expression failed. Allows additional information to be passed during an evaluation failure.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.IsReadOnly">
            <summary>
            Indicates that the object is read only.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.IsRawString">
            <summary>
            Indicates that the object is a raw string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.HasObjectId">
            <summary>
            Indicates that the object can have an Object ID created for it.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.CanHaveObjectId">
            <summary>
            Indicates that the object has an Object ID associated with it.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.HasSideEffects">
            <summary>
            Indicates that the evaluation had side effects.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.IsStatic">
            <summary>
            Indicates that the object is static.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.IsConstant">
            <summary>
            Indicates that the object is a constant.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.ExpressionType">
            <summary>
            Type of the expression: property, method, etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.AccessLevel">
            <summary>
            Access type of the expression: public, private, etc.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.ExpressionTypeValue},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes.AccessLevelValue})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes"/> class.
            </summary>
            <param name="isFailedEvaluation">Evaluation of the expression failed. Allows additional information to be passed during an evaluation failure.</param>
            <param name="isReadOnly">Indicates that the object is read only.</param>
            <param name="isRawString">Indicates that the object is a raw string.</param>
            <param name="hasObjectId">Indicates that the object can have an Object ID created for it.</param>
            <param name="canHaveObjectId">Indicates that the object has an Object ID associated with it.</param>
            <param name="hasSideEffects">Indicates that the evaluation had side effects.</param>
            <param name="isStatic">Indicates that the object is static.</param>
            <param name="isConstant">Indicates that the object is a constant.</param>
            <param name="expressionType">Type of the expression: property, method, etc.</param>
            <param name="accessLevel">Access type of the expression: public, private, etc.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakMode">
            <summary>
            This enumeration defines all possible conditions when a thrown exception should result in a break.
            never: never breaks,
            always: always breaks,
            unhandled: breaks when excpetion unhandled,
            userUnhandled: breaks if the exception is not handled by user code.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter">
            <summary>
            An ExceptionBreakpointsFilter is shown in the UI as an option for configuring how exceptions are dealt with.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter.Filter">
            <summary>
            The internal ID of the filter. This value is passed to the setExceptionBreakpoints request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter.Label">
            <summary>
            The name of the filter. This will be shown in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter.Default">
            <summary>
            Initial value of the filter. If not specified a value 'false' is assumed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter.#ctor(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakpointsFilter"/> class.
            </summary>
            <param name="filter">The internal ID of the filter. This value is passed to the setExceptionBreakpoints request.</param>
            <param name="label">The name of the filter. This will be shown in the UI.</param>
            <param name="default">Initial value of the filter. If not specified a value 'false' is assumed.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails">
            <summary>
            Detailed information about an exception that has occurred
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.Message">
            <summary>
            Message contained in the exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.TypeName">
            <summary>
            Short type name of the exception object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.FullTypeName">
            <summary>
            Fully-qualified type name of the exception object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.EvaluateName">
            <summary>
            Optional expression that can be evaluated in the current scope to obtain the exception object.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.StackTrace">
            <summary>
            Stack trace at the time the exception was thrown.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.InnerException">
            <summary>
            Details of the exception contained by this exception, if any.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.FormattedDescription">
            <summary>
            Formatted description of the exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.HResult">
            <summary>
            Result code of the exception.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.Source">
            <summary>
            Name of the object or application that raised the exception.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails.#ctor(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails},System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionDetails"/> class.
            </summary>
            <param name="message">Message contained in the exception.</param>
            <param name="typeName">Short type name of the exception object.</param>
            <param name="fullTypeName">Fully-qualified type name of the exception object.</param>
            <param name="evaluateName">Optional expression that can be evaluated in the current scope to obtain the exception object.</param>
            <param name="stackTrace">Stack trace at the time the exception was thrown.</param>
            <param name="innerException">Details of the exception contained by this exception, if any.</param>
            <param name="formattedDescription">Formatted description of the exception.</param>
            <param name="hresult">Result code of the exception.</param>
            <param name="source">Name of the object or application that raised the exception.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions">
            <summary>
            An ExceptionOptions assigns configuration options to a set of exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions.Path">
            <summary>
            A path that selects a single or multiple exceptions in a tree. If 'path' is missing, the whole tree is selected. By convention the first segment of the path is a category that is used to group exceptions in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions.BreakMode">
            <summary>
            Condition when a thrown exception should result in a break.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakMode,System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions"/> class.
            </summary>
            <param name="breakMode">Condition when a thrown exception should result in a break.</param>
            <param name="path">A path that selects a single or multiple exceptions in a tree. If 'path' is missing, the whole tree is selected. By convention the first segment of the path is a category that is used to group exceptions in the UI.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions.#ctor(Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionBreakMode,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment[])">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionOptions" /> class.
            </summary>
            <param name="breakMode">Condition when a thrown exception should result in a break.</param>
            <param name="path">A path that selects a single or multiple exceptions in a tree. If 'path' is missing, the whole tree is selected. By convention the first segment of the path is a category that is used to group exceptions in the UI.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment">
            <summary>
            An ExceptionPathSegment represents a segment in a path that is used to match leafs or nodes in a tree of exceptions. If a segment consists of more than one name, it matches the names provided if 'negate' is false or missing or it matches anything except the names provided if 'negate' is true.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment.Negate">
            <summary>
            If false or missing this segment matches the names provided, otherwise it matches anything except the names provided.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment.Names">
            <summary>
            Depending on the value of 'negate' the names that should match or not match.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment.#ctor(System.Collections.Generic.List{System.String},System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment"/> class.
            </summary>
            <param name="names">Depending on the value of 'negate' the names that should match or not match.</param>
            <param name="negate">If false or missing this segment matches the names provided, otherwise it matches anything except the names provided.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment.#ctor(System.Nullable{System.Boolean},System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ExceptionPathSegment" /> class.
            </summary>
            <param name="negate">If false or missing this segment matches the names provided, otherwise it matches anything except the names provided.</param>
            <param name="names">Depending on the value of 'negate' the names that should match or not match.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint">
            <summary>
            Properties of a breakpoint passed to the setFunctionBreakpoints request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint.Name">
            <summary>
            The name of the function.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint.Condition">
            <summary>
            An optional expression for conditional breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint.HitCondition">
            <summary>
            An optional expression that controls how many hits of the breakpoint are ignored. The backend is expected to interpret the expression as needed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.FunctionBreakpoint"/> class.
            </summary>
            <param name="name">The name of the function.</param>
            <param name="condition">An optional expression for conditional breakpoints.</param>
            <param name="hitCondition">An optional expression that controls how many hits of the breakpoint are ignored. The backend is expected to interpret the expression as needed.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget">
            <summary>
            A GotoTarget describes a code location that can be used as a target in the 'goto' request.
            The possible goto targets can be determined via the 'gotoTargets' request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.Id">
            <summary>
            Unique identifier for a goto target. This is used in the goto request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.Label">
            <summary>
            The name of the goto target (shown in the UI).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.Line">
            <summary>
            The line of the goto target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.Column">
            <summary>
            An optional column of the goto target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.EndLine">
            <summary>
            An optional end line of the range covered by the goto target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.EndColumn">
            <summary>
            An optional end column of the range covered by the goto target.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget.#ctor(System.Int32,System.String,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.GotoTarget"/> class.
            </summary>
            <param name="id">Unique identifier for a goto target. This is used in the goto request.</param>
            <param name="label">The name of the goto target (shown in the UI).</param>
            <param name="line">The line of the goto target.</param>
            <param name="column">An optional column of the goto target.</param>
            <param name="endLine">An optional end line of the range covered by the goto target.</param>
            <param name="endColumn">An optional end column of the range covered by the goto target.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message">
            <summary>
            A structured message object. Used to return errors from requests.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.Id">
            <summary>
            Unique identifier for the message.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.Format">
            <summary>
            A format string for the message. Embedded variables have the form '{name}'.
            If variable name starts with an underscore character, the variable does not contain user data (PII) and can be safely used for telemetry purposes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.Variables">
            <summary>
            An object used as a dictionary for looking up the variables in the format string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.SendTelemetry">
            <summary>
            If true send to telemetry.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.ShowUser">
            <summary>
            If true show user.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.Url">
            <summary>
            An optional url where additional information about this message can be found.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.UrlLabel">
            <summary>
            An optional label that is presented to the user as the UI for opening the url.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message.#ctor(System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message"/> class.
            </summary>
            <param name="id">Unique identifier for the message.</param>
            <param name="format">A format string for the message. Embedded variables have the form '{name}'. If variable name starts with an underscore character, the variable does not contain user data (PII) and can be safely used for telemetry purposes.</param>
            <param name="variables">An object used as a dictionary for looking up the variables in the format string.</param>
            <param name="sendTelemetry">If true send to telemetry.</param>
            <param name="showUser">If true show user.</param>
            <param name="url">An optional url where additional information about this message can be found.</param>
            <param name="urlLabel">An optional label that is presented to the user as the UI for opening the url.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module">
            <summary>
            A Module object represents a row in the modules view.
            Two attributes are mandatory: an id identifies a module in the modules view and is used in a ModuleEvent for identifying a module for adding, updating or deleting.
            The name is used to minimally render the module in the UI.
            Additional attributes can be added to the module. They will show up in the module View if they have a corresponding ColumnDescriptor.
            To avoid an unnecessary proliferation of additional attributes with similar semantics but different names
            we recommend to re-use attributes from the 'recommended' list below first, and only introduce new attributes if nothing appropriate could be found.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.Id">
            <summary>
            Unique identifier for the module.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.Name">
            <summary>
            A name of the module.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.Path">
            <summary>
            optional but recommended attributes.
            always try to use these first before introducing additional attributes.
            Logical full path to the module. The exact definition is implementation defined, but usually this would be a full path to the on-disk file for the module.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.IsOptimized">
            <summary>
            True if the module is optimized.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.IsUserCode">
            <summary>
            True if the module is considered 'user code' by a debugger that supports 'Just My Code'.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.Version">
            <summary>
            Version of Module.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.SymbolStatus">
            <summary>
            User understandable description of if symbols were found for the module (ex: 'Symbols Loaded', 'Symbols not found', etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.SymbolFilePath">
            <summary>
            Logical full path to the symbol file. The exact definition is implementation defined.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.DateTimeStamp">
            <summary>
            Module created or modified.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.AddressRange">
            <summary>
            Address range covered by this module.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsLoadAddress">
            <summary>
            Address where the module was loaded as a 64-bit unsigned decimal number in a string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsPreferredLoadAddress">
            <summary>
            Preferred load address where the module was loaded as a 64-bit unsigned decimal number formatted to a string
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsModuleSize">
            <summary>
            Size of the module in the address space
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsLoadOrder">
            <summary>
            Integer indicating the order in which the module was loaded
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsTimestampUTC">
            <summary>
            The time when the module was built in the units of UNIX timestamp formatted as a 64-bit unsigned decimal number in a string.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsIs64Bit">
            <summary>
            'true' if the module is 64-bit
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsAppDomain">
            <summary>
            For .NET modules, this indicates the name of the AppDomain where the module is loaded.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.VsAppDomainId">
            <summary>
            For .NET modules, this indicates the ID of the AppDomain where the module is loaded.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module.#ctor(System.Object,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Module"/> class.
            </summary>
            <param name="id">Unique identifier for the module.</param>
            <param name="name">A name of the module.</param>
            <param name="path">optional but recommended attributes. always try to use these first before introducing additional attributes.  Logical full path to the module. The exact definition is implementation defined, but usually this would be a full path to the on-disk file for the module.</param>
            <param name="isOptimized">True if the module is optimized.</param>
            <param name="isUserCode">True if the module is considered 'user code' by a debugger that supports 'Just My Code'.</param>
            <param name="version">Version of Module.</param>
            <param name="symbolStatus">User understandable description of if symbols were found for the module (ex: 'Symbols Loaded', 'Symbols not found', etc.</param>
            <param name="symbolFilePath">Logical full path to the symbol file. The exact definition is implementation defined.</param>
            <param name="dateTimeStamp">Module created or modified.</param>
            <param name="addressRange">Address range covered by this module.</param>
            <param name="vsLoadAddress">Address where the module was loaded as a 64-bit unsigned decimal number in a string</param>
            <param name="vsPreferredLoadAddress">Preferred load address where the module was loaded as a 64-bit unsigned decimal number formatted to a string</param>
            <param name="vsModuleSize">Size of the module in the address space</param>
            <param name="vsLoadOrder">Integer indicating the order in which the module was loaded</param>
            <param name="vsTimestampUTC">The time when the module was built in the units of UNIX timestamp formatted as a 64-bit unsigned decimal number in a string.</param>
            <param name="vsIs64Bit">'true' if the module is 64-bit</param>
            <param name="vsAppDomain">For .NET modules, this indicates the name of the AppDomain where the module is loaded.</param>
            <param name="vsAppDomainId">For .NET modules, this indicates the ID of the AppDomain where the module is loaded.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope">
            <summary>
            A Scope is a named container for variables. Optionally a scope can map to a source or a range within a source.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.Name">
            <summary>
            Name of the scope such as 'Arguments', 'Locals'.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.VariablesReference">
            <summary>
            The variables of this scope can be retrieved by passing the value of variablesReference to the VariablesRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.NamedVariables">
            <summary>
            The number of named variables in this scope.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.IndexedVariables">
            <summary>
            The number of indexed variables in this scope.
            The client can use this optional information to present the variables in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.Expensive">
            <summary>
            If true, the number of variables in this scope is large or expensive to retrieve.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.Source">
            <summary>
            Optional source for this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.Line">
            <summary>
            Optional start line of the range covered by this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.Column">
            <summary>
            Optional start column of the range covered by this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.EndLine">
            <summary>
            Optional end line of the range covered by this scope.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.EndColumn">
            <summary>
            Optional end column of the range covered by this scope.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope.#ctor(System.String,System.Int32,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Scope"/> class.
            </summary>
            <param name="name">Name of the scope such as 'Arguments', 'Locals'.</param>
            <param name="variablesReference">The variables of this scope can be retrieved by passing the value of variablesReference to the VariablesRequest.</param>
            <param name="expensive">If true, the number of variables in this scope is large or expensive to retrieve.</param>
            <param name="namedVariables">The number of named variables in this scope. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
            <param name="indexedVariables">The number of indexed variables in this scope. The client can use this optional information to present the variables in a paged UI and fetch them in chunks.</param>
            <param name="source">Optional source for this scope.</param>
            <param name="line">Optional start line of the range covered by this scope.</param>
            <param name="column">Optional start column of the range covered by this scope.</param>
            <param name="endLine">Optional end line of the range covered by this scope.</param>
            <param name="endColumn">Optional end column of the range covered by this scope.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script">
            <summary>
            A Script object represents a source that is dynamically loaded by the debugger.
            An id identifies a script and is used in a ScriptEvent for identifying a script for loading or unloading.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script.Id">
            <summary>
            Unique identifier for the script.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script.Source">
            <summary>
            The source for the script.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script.Children">
            <summary>
            An optional list of scripts that are related to the main source.
            These may be the source that generated the main source.
            These will be displayed in a tree in the UI.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script.#ctor(System.Int32,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Script"/> class.
            </summary>
            <param name="id">Unique identifier for the script.</param>
            <param name="source">The source for the script.</param>
            <param name="children">An optional list of scripts that are related to the main source. These may be the source that generated the main source. These will be displayed in a tree in the UI.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source">
            <summary>
            A Source is a descriptor for source code. It is returned from the debug adapter as part of a StackFrame and it is used by clients when specifying breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.Name">
            <summary>
            The short name of the source. Every source returned from the debug adapter has a name. When sending a source to the debug adapter this name is optional.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.Path">
            <summary>
            The path of the source to be shown in the UI. It is only used to locate and load the content of the source if no sourceReference is specified (or its vaule is 0).
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.SourceReference">
            <summary>
            If sourceReference > 0 the contents of the source must be retrieved through the SourceRequest (even if a path is specified). A sourceReference is only valid for a session, so it must not be used to persist a source.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.PresentationHint">
            <summary>
            An optional hint for how to present the source in the UI. A value of 'deemphasize' can be used to indicate that the source is not available or that it is skipped on stepping.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.Origin">
            <summary>
            The (optional) origin of this source: possible values 'internal module', 'inlined content from source map', etc.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.AdapterData">
            <summary>
            Optional data that a debug adapter might want to loop through the client. The client should leave the data intact and persist it across sessions. The client should not interpret the data.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.Checksums">
            <summary>
            The checksums associated with this file.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.#ctor(System.String,System.String,System.Nullable{System.Int32},System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source.PresentationHintValue},System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.List{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Checksum})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source"/> class.
            </summary>
            <param name="name">The short name of the source. Every source returned from the debug adapter has a name. When sending a source to the debug adapter this name is optional.</param>
            <param name="path">The path of the source to be shown in the UI. It is only used to locate and load the content of the source if no sourceReference is specified (or its vaule is 0).</param>
            <param name="sourceReference">If sourceReference > 0 the contents of the source must be retrieved through the SourceRequest (even if a path is specified). A sourceReference is only valid for a session, so it must not be used to persist a source.</param>
            <param name="presentationHint">An optional hint for how to present the source in the UI. A value of 'deemphasize' can be used to indicate that the source is not available or that it is skipped on stepping.</param>
            <param name="origin">The (optional) origin of this source: possible values 'internal module', 'inlined content from source map', etc.</param>
            <param name="adapterData">Optional data that a debug adapter might want to loop through the client. The client should leave the data intact and persist it across sessions. The client should not interpret the data.</param>
            <param name="checksums">The checksums associated with this file.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint">
            <summary>
            Properties of a breakpoint passed to the setBreakpoints request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.Line">
            <summary>
            The source line of the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.Column">
            <summary>
            An optional source column of the breakpoint.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.Condition">
            <summary>
            An optional expression for conditional breakpoints.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.HitCondition">
            <summary>
            An optional expression that controls how many hits of the breakpoint are ignored. The backend is expected to interpret the expression as needed.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint.#ctor(System.Int32,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.SourceBreakpoint"/> class.
            </summary>
            <param name="line">The source line of the breakpoint.</param>
            <param name="column">An optional source column of the breakpoint.</param>
            <param name="condition">An optional expression for conditional breakpoints.</param>
            <param name="hitCondition">An optional expression that controls how many hits of the breakpoint are ignored. The backend is expected to interpret the expression as needed.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame">
            <summary>
            A Stackframe contains the source location.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.Id">
            <summary>
            An identifier for the stack frame. It must be unique across all threads. This id can be used to retrieve the scopes of the frame with the 'scopesRequest' or to restart the execution of a stackframe.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.Name">
            <summary>
            The name of the stack frame, typically a method name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.Source">
            <summary>
            The optional source of the frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.Line">
            <summary>
            The line within the file of the frame. If source is null or doesn't exist, line is 0 and must be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.Column">
            <summary>
            The column within the line. If source is null or doesn't exist, column is 0 and must be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.EndLine">
            <summary>
            An optional end line of the range covered by the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.EndColumn">
            <summary>
            An optional end column of the range covered by the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.ModuleId">
            <summary>
            The module associated with this frame, if any.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.PresentationHint">
            <summary>
            An optional hint for how to present this frame in the UI. A value of 'label' can be used to indicate that the frame is an artificial frame that is used as a visual label or separator. A value of 'subtle' can be used to change the appearance of a frame in a 'subtle' way.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.#ctor(System.Int32,System.String,System.Int32,System.Int32,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Source,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object,System.Nullable{Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame.PresentationHintValue})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrame"/> class.
            </summary>
            <param name="id">An identifier for the stack frame. It must be unique across all threads. This id can be used to retrieve the scopes of the frame with the 'scopesRequest' or to restart the execution of a stackframe.</param>
            <param name="name">The name of the stack frame, typically a method name.</param>
            <param name="line">The line within the file of the frame. If source is null or doesn't exist, line is 0 and must be ignored.</param>
            <param name="column">The column within the line. If source is null or doesn't exist, column is 0 and must be ignored.</param>
            <param name="source">The optional source of the frame.</param>
            <param name="endLine">An optional end line of the range covered by the stack frame.</param>
            <param name="endColumn">An optional end column of the range covered by the stack frame.</param>
            <param name="moduleId">The module associated with this frame, if any.</param>
            <param name="presentationHint">An optional hint for how to present this frame in the UI. A value of 'label' can be used to indicate that the frame is an artificial frame that is used as a visual label or separator. A value of 'subtle' can be used to change the appearance of a frame in a 'subtle' way.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat">
            <summary>
            Provides formatting information for a stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.Parameters">
            <summary>
            Displays parameters for the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.ParameterTypes">
            <summary>
            Displays the types of parameters for the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.ParameterNames">
            <summary>
            Displays the names of parameters for the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.ParameterValues">
            <summary>
            Displays the values of parameters for the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.Line">
            <summary>
            Displays the line number of the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.Module">
            <summary>
            Displays the module of the stack frame.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.IncludeAll">
            <summary>
            Includes all stack frames, including those the debug adapter might otherwise hide.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StackFrameFormat"/> class.
            </summary>
            <param name="parameters">Displays parameters for the stack frame.</param>
            <param name="parameterTypes">Displays the types of parameters for the stack frame.</param>
            <param name="parameterNames">Displays the names of parameters for the stack frame.</param>
            <param name="parameterValues">Displays the values of parameters for the stack frame.</param>
            <param name="line">Displays the line number of the stack frame.</param>
            <param name="module">Displays the module of the stack frame.</param>
            <param name="includeAll">Includes all stack frames, including those the debug adapter might otherwise hide.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget">
            <summary>
            A StepInTarget can be used in the 'stepIn' request and determines into which single target the stepIn request should step.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget.Id">
            <summary>
            Unique identifier for a stepIn target.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget.Label">
            <summary>
            The name of the stepIn target (shown in the UI).
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget.#ctor(System.Int32,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.StepInTarget"/> class.
            </summary>
            <param name="id">Unique identifier for a stepIn target.</param>
            <param name="label">The name of the stepIn target (shown in the UI).</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread">
            <summary>
            A Thread
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread.Id">
            <summary>
            Unique identifier for the thread.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread.Name">
            <summary>
            A name of the thread.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread.#ctor(System.Int32,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Thread"/> class.
            </summary>
            <param name="id">Unique identifier for the thread.</param>
            <param name="name">A name of the thread.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat">
            <summary>
            Provides formatting information for a value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat.Hex">
            <summary>
            Display the value in hex.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat.#ctor(System.Nullable{System.Boolean})">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ValueFormat"/> class.
            </summary>
            <param name="hex">Display the value in hex.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable">
            <summary>
            A Variable is a name/value pair.
            Optionally a variable can have a 'type' that is shown if space permits or when hovering over the variable's name.
            An optional 'kind' is used to render additional properties of the variable, e.g. different icons can be used to indicate that a variable is public or private.
            If the value is structured (has children), a handle is provided to retrieve the children with the VariablesRequest.
            If the number of named or indexed children is large, the numbers should be returned via the optional 'namedVariables' and 'indexedVariables' attributes.
            The client can use this optional information to present the children in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.Name">
            <summary>
            The variable's name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.Value">
            <summary>
            The variable's value. This can be a multi-line text, e.g. for a function the body of a function.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.Type">
            <summary>
            The type of the variable's value. Typically shown in the UI when hovering over the value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.Kind">
            <summary>
            Properties of a variable that can be used to determine how to render the variable in the UI. Format of the string value: TBD.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.EvaluateName">
            <summary>
            Optional evaluatable name of this variable which can be passed to the 'EvaluateRequest' to fetch the variable's value.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.VariablesReference">
            <summary>
            If variablesReference is > 0, the variable is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.NamedVariables">
            <summary>
            The number of named child variables.
            The client can use this optional information to present the children in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.IndexedVariables">
            <summary>
            The number of indexed child variables.
            The client can use this optional information to present the children in a paged UI and fetch them in chunks.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.EvaluationAttribute">
            <summary>
            Optional attributes describing the type to help with display.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.EvaluationAttributes)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Variable"/> class.
            </summary>
            <param name="name">The variable's name.</param>
            <param name="value">The variable's value. This can be a multi-line text, e.g. for a function the body of a function.</param>
            <param name="variablesReference">If variablesReference is > 0, the variable is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.</param>
            <param name="type">The type of the variable's value. Typically shown in the UI when hovering over the value.</param>
            <param name="kind">Properties of a variable that can be used to determine how to render the variable in the UI. Format of the string value: TBD.</param>
            <param name="evaluateName">Optional evaluatable name of this variable which can be passed to the 'EvaluateRequest' to fetch the variable's value.</param>
            <param name="namedVariables">The number of named child variables. The client can use this optional information to present the children in a paged UI and fetch them in chunks.</param>
            <param name="indexedVariables">The number of indexed child variables. The client can use this optional information to present the children in a paged UI and fetch them in chunks.</param>
            <param name="evaluationAttribute">Optional attributes describing the type to help with display.</param>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequest`1">
            <summary>
            Base class for a request that does not require a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequest`1.Args">
            <summary>
            Arguments for the request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugRequestWithResponse`2">
            <summary>
            Base class for a request that requires a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the request.</typeparam>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequest`1">
            <summary>
            Base class for a client request that does not require a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequest`1.Args">
            <summary>
            Arguments for the request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.DebugClientRequestWithResponse`2">
            <summary>
            Base class for a client request that requires a response.
            </summary>
            <typeparam name="TArgs">Type of the arguments for the client request.</typeparam>
            <typeparam name="TResponse">Type of the response expected for the client request.</typeparam>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.ResponseBody">
            <summary>
            Base class for protocol response bodies.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.INamed">
            <summary>
            Represents an object with a name.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.INamed.Name">
            <summary>
            The name of the object.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException">
            <summary>
            Represents errors that occur during the processing of protocol messages.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="id">Unique identifier for the message.</param>
            <param name="format">A format string for the message. Embedded variables have the form '{name}'. If variable name starts with an underscore character, the variable does not contain user data (PII) and can be safely used for telemetry purposes.</param>
            <param name="variables">An object used as a dictionary for looking up the variables in the format string.</param>
            <param name="sendTelemetry">If true send to telemetry.</param>
            <param name="showUser">If true show user.</param>
            <param name="url">An optional url where additional information about this message can be found.</param>
            <param name="urlLabel">An optional label that is presented to the user as the UI for opening the url.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor(System.String,Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="detailMessage"><see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message"/> object containing additional details about the error.</param>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException"/> class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.ProtocolMessage">
            <summary>
            A <see cref="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Messages.Message"/> object containing additional details about the error, if available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.ErrorCode">
            <summary>
            Error code associated with the error, if available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.DetailMessage">
            <summary>
            Detailed message associated with the error, if available.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.FormatString">
            <summary>
            A format string for the message. Embedded variables have the form '{name}'. If variable name starts with an underscore character, the variable does not contain user data (PII) and can be safely used for telemetry purposes.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.Variables">
            <summary>
            An object used as a dictionary for looking up the variables in the format string.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.ProtocolException.ToString">
            <summary>
            Creates and returns a string representation of the error.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DispatcherErrorEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.DispatcherError"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.DispatcherErrorEventArgs.Exception">
            <summary>
            The exception thrown by the protocol implementation.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.RequestReceivedEventArgs">
            <summary>
            Provides data for the <see cref="E:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Protocol.DebugProtocol.RequestReceived"/> event.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.RequestReceivedEventArgs.Command">
            <summary>
            The protocol type of the request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.RequestReceivedEventArgs.Args">
            <summary>
            Arguments for the request.
            </summary>
        </member>
        <member name="P:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.RequestReceivedEventArgs.Response">
            <summary>
            Response to provide for the request.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities">
            <summary>
            Helper class containing methods for dealing with JSON values.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.FalseToNull(System.Boolean)">
            <summary>
            Converts a boolean to a nullable boolean, converting "false" to "null".
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.FalseToNull(System.Nullable{System.Boolean})">
            <summary>
            Converts a nullable boolean with a value of "false" to one with a value of "null".
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValueAsString(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            Extracts a string from a JSON property bag.
            </summary>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the property to extract.</param>
            <returns>The value of the property, or null if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValueAsBool(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            Extracts a nullable <see cref="T:System.Boolean"/> from a JSON property bag.
            </summary>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the property to extract.</param>
            <returns>The value of the property, or null if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValueAsInt(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            Extracts a nullable <see cref="T:System.Int32"/> from a JSON property bag.
            </summary>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the property to extract.</param>
            <returns>The value of the property, or null if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.StringAsULong(System.String)">
            <summary>
            Converts a string to a nullable <see cref="T:System.UInt64"/>.
            </summary>
            <param name="jsonString">The string to convert.</param>
            <returns>The converted value, or null if parsing fails.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValueAsGuid(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            Extracts a nullable <see cref="T:System.Guid"/> from a JSON property bag.
            </summary>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the property to extract.</param>
            <returns>The value of the property, or null if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValue``1(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String,Newtonsoft.Json.Linq.JTokenType)">
            <summary>
            Extracts a property from a JSON property bag.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the proeprty to extract.</param>
            <param name="type">The type of the JSON token.</param>
            <returns>The value of the property, or the default value for the property's type if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.JsonUtilities.GetValueAsObject(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken},System.String)">
            <summary>
            Extracts an object from a JSON property bag.
            </summary>
            <param name="properties">The property bag.</param>
            <param name="propertyName">The name of the property to extract.</param>
            <returns>The value of the property, or null if the property is not present.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.StringExtensions.FormatInvariantWithArgs(System.String,System.Object[])">
            <summary>
            Formats the format string with the given arguments using the invariant culture.
            </summary>
        </member>
        <member name="T:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.TimestampUtilities">
            <summary>
            Helper class containing methods for dealing with timestamps.
            </summary>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.TimestampUtilities.ToUnixTimestamp(System.DateTime)">
            <summary>
            Converts a <see cref="T:System.DateTime"/> to a Unix-style timestamp.
            </summary>
            <param name="timestamp">The <see cref="T:System.DateTime"/> to convert.</param>
            <returns>The Unix-style timestamp.</returns>
        </member>
        <member name="M:Microsoft.VisualStudio.Shared.VSCodeDebugProtocol.Utilities.TimestampUtilities.UnixTimestampToDateTime(System.Int64)">
            <summary>
            Converts a Unix-style timestamp to a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="unixTimestamp">The Unix-style timestamp value to convert.</param>
            <returns>A <see cref="T:System.DateTime"/> representing the Unix-style timestamp.</returns>
        </member>
    </members>
</doc>
